import React from 'react';
import { Pressable, Text, ViewStyle, StyleSheet, View } from 'react-native';
import { LinearGradient } from 'expo-linear-gradient';
import { colors, radii, shadows, gradients } from '../theme/tokens';

type Variant = 'primary' | 'secondary';

interface Props {
  title: string;
  onPress?: () => void;
  disabled?: boolean;
  style?: ViewStyle;
  variant?: Variant;
}

export const CTPButton: React.FC<Props> = ({ title, onPress, disabled, style, variant = 'primary' }) => {
  const isPrimary = variant === 'primary';
  return (
    <Pressable onPress={onPress} disabled={disabled} style={({ pressed }) => [styles.base, style, pressed && styles.pressed, disabled && styles.disabled]}>
      {isPrimary ? (
        <LinearGradient colors={[...gradients.primary]} start={{ x: 0, y: 0 }} end={{ x: 1, y: 1 }} style={[styles.gradient, shadows.glow]}>
          <Text style={styles.title}>{title}</Text>
        </LinearGradient>
      ) : (
        <View style={[styles.secondary, shadows.glow]}>
          <Text style={styles.title}>{title}</Text>
        </View>
      )}
    </Pressable>
  );
};

const styles = StyleSheet.create({
  base: {
    borderRadius: radii.lg,
    overflow: 'hidden',
  },
  pressed: {
    opacity: 0.9,
  },
  disabled: {
    opacity: 0.6,
  },
  gradient: {
    paddingVertical: 14,
    paddingHorizontal: 20,
    borderRadius: radii.lg,
    alignItems: 'center',
    justifyContent: 'center',
  },
  secondary: {
    paddingVertical: 14,
    paddingHorizontal: 20,
    borderRadius: radii.lg,
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: colors.surface,
    borderWidth: 1,
    borderColor: colors.accent,
  },
  title: {
    color: colors.text,
    fontWeight: '600',
    letterSpacing: 0.2,
  },
});

export default CTPButton;



